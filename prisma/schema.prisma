// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  oauthId String?  @unique
  profile Profile?
  Records Record[]
}

model Profile {
  id       Int     @id @default(autoincrement())
  userId   Int     @unique
  user     User    @relation(fields: [userId], references: [id])
  photoUrl String?
}

enum MediaType {
  VIDEO
  IMAGE
}

model Media {
  id     Int       @id @default(autoincrement())
  url    String    @unique
  type   MediaType @default(VIDEO)
  Record Record[]
}

model Record {
  id          Int       @id @default(autoincrement())
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  mediaId     Int
  media       Media     @relation(fields: [mediaId], references: [id], onDelete: Cascade)
  address     String    @default("")
  latitude    String    @default("")
  longitude   String    @default("")
  date        DateTime  @default(now())
  analyticsId Int       @default(1)
  analytics   Analytics @relation(fields: [analyticsId], references: [id])
}

model Analytics {
  id         Int      @id @default(autoincrement())
  decision   String   @default("")
  CarCount   Int      @default(0)
  BikeCount  Int      @default(0)
  TruckCount Int      @default(0)
  BusCount   Int      @default(0)
  Record     Record[]
}
